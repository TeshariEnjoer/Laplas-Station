name: Checks
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  merge_group:
    branches:
      - master
jobs:
  run_linters:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Run Linters
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
      - uses: actions/checkout@v3

      - name: Restore SpacemanDMM cache
        id: cache-spacemandmm
        uses: actions/cache@v3
        with:
          path: ~/dreamchecker
          key: ${{ runner.os }}-spacemandmm-cache-${{ secrets.CACHE_PURGE_KEY }}-${{ hashFiles('dependencies.sh') }}
      - name: Build SpacemanDMM
        run: bash tools/ci/build_spaceman_dmm.sh dreamchecker

      - name: Restore BYOND cache
        id: cache-byond
        uses: actions/cache@v3
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond-cache-${{ secrets.CACHE_PURGE_KEY }}-${{ hashFiles('dependencies.sh') }}
      - name: Install BYOND
        if: steps.cache-byond.outputs.cache-hit != 'true'
        run: bash tools/ci/install_byond.sh

      - name: Restore Yarn cache
        uses: actions/cache@v3
        with:
          path: tgui/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ secrets.CACHE_PURGE_KEY }}-${{ hashFiles('tgui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ secrets.CACHE_PURGE_KEY }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Tools
        run: |
          pip3 install setuptools
          bash tools/ci/install_node.sh
          bash tools/ci/install_spaceman_dmm.sh dreamchecker
          cargo install ripgrep --features pcre2
          tools/bootstrap/python -c ''

      - name: Run Linters
        run: |
          tools/bootstrap/python -m tools.maplint.source --github
          tools/build/build --ci lint tgui-test
          bash tools/ci/check_filedirs.sh shiptest.dme
          bash tools/ci/check_changelogs.sh
          bash tools/ci/check_misc.sh
          bash tools/ci/check_grep.sh
          tools/bootstrap/python -m dmi.test
          tools/bootstrap/python -m mapmerge2.dmm_test
          ~/dreamchecker > ${GITHUB_WORKSPACE}/output-annotations.txt 2>&1

      - name: Annotate Lints
        uses: yogstation13/DreamAnnotate@v2
        with:
          outputFile: output-annotations.txt

      - name: Run Check Regex
        run: |
          tools/bootstrap/python -m ci.check_regex --log-changes-only --github-actions

      - name: Annotate Regex Matches
        run: |
          cat check_regex_output.txt

  compile_all_maps:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Compile Maps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup cache
        id: cache-byond
        uses: actions/cache@v3
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond-cache-${{ secrets.CACHE_PURGE_KEY }}-${{ hashFiles('dependencies.sh') }}
      - name: Install BYOND
        if: steps.cache-byond.outputs.cache-hit != 'true'
        run: bash tools/ci/install_byond.sh

      - name: Compile All Maps
        run: |
          source $HOME/BYOND/byond/bin/byondsetup
          tools/build/build --ci dm -DCIBUILDING -DCITESTING -DALL_MAPS -DFULL_INIT

  run_all_tests:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Integration Tests
    strategy:
      fail-fast: false
      matrix:
        arg: [
          "BASIC_TESTS",
          "CREATE_AND_DESTROY_TEST",
          "PLANET_GEN_TEST",
          "RUIN_PLACEMENT_TEST",
          "SHIP_PLACEMENT_TEST"
        ]
    uses: ./.github/workflows/run_integration_tests.yml
    with:
      arg: ${{ matrix.arg }}

#  run_alternate_tests:
#    if: "!contains(github.event.head_commit.message, '[ci skip]')"
#    name: Alternate Tests
#    strategy:
#      fail-fast: false
#      matrix:
#        major: [515]
#        minor: [1614]
#    uses: ./.github/workflows/run_integration_tests.yml
#    with:
#      major: ${{ matrix.major }}
#      minor: ${{ matrix.minor }}

  test_windows:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Windows Build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Restore Yarn cache
        uses: actions/cache@v3
        with:
          path: tgui/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ secrets.CACHE_PURGE_KEY }}-${{ hashFiles('tgui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ secrets.CACHE_PURGE_KEY }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Compile
        run: pwsh tools/ci/build.ps1
        env:
          DM_EXE: "C:\\byond\\bin\\dm.exe"

      - name: Create artifact
        run: |
          md deploy
          bash tools/deploy.sh ./deploy

      - name: Deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: deploy
